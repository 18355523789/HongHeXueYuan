<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.linter.learning.course.dao.ClassEvaluationDao">

    <resultMap id="BaseResultMap" type="cn.linter.learning.course.entity.ClassEvaluation">
        <id column="id" property="id"/>
        <result column="class_id" property="classId"/>
        <result column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="user_avatar" property="userAvatar"/>
        <result column="score" property="score"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, class_id, user_id, username, user_avatar, score, content, create_time, update_time
    </sql>

    <select id="listByClassId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM class_evaluation
        WHERE class_id = #{classId}
        ORDER BY create_time DESC
    </select>

    <insert id="create" parameterType="cn.linter.learning.course.entity.ClassEvaluation" useGeneratedKeys="true" keyProperty="evaluation.id">
        INSERT INTO class_evaluation (class_id, user_id, username, user_avatar, score, content, create_time, update_time)
        VALUES (#{evaluation.classId}, #{evaluation.userId}, #{evaluation.username}, #{evaluation.userAvatar}, #{evaluation.score}, #{evaluation.content}, #{evaluation.createTime}, #{evaluation.updateTime})
    </insert>

    <update id="update" parameterType="cn.linter.learning.course.entity.ClassEvaluation">
        UPDATE class_evaluation
        <set>
            <if test="evaluation.score != null">
                score = #{evaluation.score},
            </if>
            <if test="evaluation.content != null">
                content = #{evaluation.content},
            </if>
            <if test="evaluation.updateTime != null">
                update_time = #{evaluation.updateTime},
            </if>
        </set>
        WHERE id = #{evaluation.id}
    </update>

    <delete id="delete">
        DELETE FROM class_evaluation WHERE id = #{id}
    </delete>

</mapper>
